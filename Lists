1. Two ways to iterate over a list
    a. for item in list:
         print item
    b. for i in range(len(x)):
         print x[i]
         
----------------------------------------------------------------         
2. Simple way to iterate over a list of lists

n = [[1, 2, 3], [4, 5, 6, 7, 8, 9]]

def flatten(lists):
    results =[]     //empty list
    for numbers in lists:
        for n in numbers:
            results.append(n)
    return results
    
print flatten(n)

-----------------------------------------------------------------
3. Creating a matrix of list
for i in range(5):
    print ["X"] * 5

-----------------------------------------------------------------
4. Building Lists
    list comprehension by using for/in and if keywords
        example: evens_to_50 = [i for i in range(51) if i % 2 == 0]
                 print evens_to_50
        output: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50]
        example2: doubles_by_3 = [x*2 for x in range(1,6) if (x*2)%3 == 0]
        output:  [6]

------------------------------------------------------------------
5. List slicing - access parts of elements in a list in a concise manner
    syntax: [start:end:stride]
    example: l = [i ** 2 for i in range(1, 11)]
             # Should be [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
             print l[2:9:2]
    output: [9, 25, 49, 81]
        - you can use this idea to omit elements in a list
            example: my_list = range(1, 11) # List of numbers 1 - 10
                     print my_list[::2]
            output: [1, 3, 5, 7, 9]
    
